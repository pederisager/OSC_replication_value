grep(pattern = x[], x = ma.table$x_study)
grep(pattern = x[6], x = ma.table$x_study)
ma.table$x_doi <- NA
ma.table$x_doi
index <- c(1,2,3,4)
index
ma.table(index,)
ma.table[index,]
ma.table[index+1,]
ma.table[index+1,"x_study"]
all.equal(ma.table[index+1,"x_study"])
identical(ma.table[index+1,"x_study"])
unique(ma.table[index+1,"x_study"])
unique(ma.table[index+1,"x_study"]) ==1
length(unique(ma.table[index+1,"x_study"]))
length(unique(ma.table[index,"x_study"]))
length(unique(ma.table[index,"x_study"])) == 1
length(unique(ma.table[index,"x_study"])) != 1
warning("a")
warning(paste("a"))
warning(paste("Multiple references matched by search term:", search.term))
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")
warning(paste("Multiple references matched by search term:", search.term))
ma.table[index, "x_study"]
ma.table$x_doi[index, "x_study"]
ma.table[index, "x_study"]$x_doi
ma.table[index, "x_study"]
ma.table[index, "x_doi"]
ma.table[index, "x_doi"] == 1
ma.table[index, "x_doi"] = 1
ma.table[index, "x_doi"]
ma.table[index, "x_doi"] = NA
ma.table[index, "x_doi"]
cr_works(query = "Agosta et al")
cr_works(query = "Evidence for the automatic evaluation of self-generated actions")
x <- cr_works(query = "Evidence for the automatic evaluation of self-generated actions")
x
View(x)
x <- cr_works(query = "author:agosta, Evidence for the automatic evaluation of self-generated actions")
x
View(x)
as.list(x)
x$data$DOI
cr_citation("10.1016/j.cognition.2012.05.009")
cr_cn("10.1016/j.cognition.2012.05.009")
cr_cn("10.1007/s40520-015-0505-2")
x <- cr_cn("10.1016/j.cognition.2012.05.009")
x
grep(pattern = ".*title = {Evidence for the automatic evaluation")
grep(pattern = ".*title = {Evidence for the automatic evaluation", x)
grep(pattern = ".*title = \{Evidence for the automatic evaluation", x)
grep(pattern = ".*title = \\{Evidence for the automatic evaluation", x)
x[2] = "a"
x
grep(pattern = ".*title = \\{Evidence for the automatic evaluation", x)
grep(pattern = paste(".*title = \\{", ref[["ref-info"]][["ref-title"]], x)
)
grep(pattern = paste(".*title = \\{", ref[["ref-info"]][["ref-title"]]), x)
paste(".*title = \\{", ref[["ref-info"]][["ref-title"]])
paste(".*title = \\{", ref[["ref-info"]][["ref-title"]], sep = "")
paste(".*title = \\{", ref[["ref-info"]][["ref-title"]], "\\}", sep = "")
paste(".*title = {", ref[["ref-info"]][["ref-title"]], "}", sep = "")
grep(pattern = paste(".*title = {", ref[["ref-info"]][["ref-title"]], "}", sep = ""), x)
grep(pattern = paste(".*title = \\{", ref[["ref-info"]][["ref-title"]], "\\}", sep = ""), x)
cr_works(query = "title:Evidence for the automatic evaluation of self-generated actions")
x <- cr_works(query = "title:Evidence for the automatic evaluation of self-generated actions")
x$data$DOI
cr_cn("10.1016/j.cognition.2012.05.009")
ref[["ref-info"]][["ref-website"]][["ce:eadress"]]
ref[["ref-info"]][["ref-website"]][["ce:eadress"]][1]
ref[["ref-info"]][["ref-website"]][["ce:eadress"]][["S"]]
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[1]]
ref[["ref-info"]][["ref-website"]][["ce:eadress"]]
ref[["ref-info"]][["ref-website"]]
ref[["ref-info"]][["ref-website"]][["ce:eaddress"]][1]
ref[["ref-info"]][["ref-website"]][["ce:eaddress"]][[1]]
ref[["ref-info"]][["ref-website"]][["ce:eaddress"]][["$"]]
ref[["ref-info"]][["ref-website"]][["ce:eaddress"]][[""]]
ref[["ref-info"]][["ref-website"]][["ce:eaddress"]]
ref[["ref-info"]][["ref-website"]][["ce:e-address"]]
ref[["ref-info"]][["ref-website"]][["ce:e-address"]][1]
ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]]
ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]] == NULL
is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])
is.null(list("NULL"))
is.null(list(NULL))
list(NULL)
is.null(alist[["content"]][["abstract-retrieval-response"]][["coredata"]][["openaccess"]])
alist[["content"]][["abstract-retrieval-response"]][["coredata"]][["openaccess"]]
alist[["content"]][["abstract-retrieval-response"]][["coredata"]]["openaccess"]
ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]
x <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]
x
x <- NULL
x
is.null(alist[["content"]][["abstract-retrieval-response"]][["coredata"]][["openaccess"]])
!is.null(alist[["content"]][["abstract-retrieval-response"]][["coredata"]][["openaccess"]])
foreach(i = table.file) %do% {  # Setting up foreach loop instead of for, to be able to do parallell processing later on.
ma.table <- read.csv(paste(table.dir, table.file, sep = ""))  # Load the relevant meta analysis table
ma.table$x_doi <- NA  # Set up DOI column
nrefs <- length(alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]])  # count number of references
foreach(j = 1:nrefs) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) != 1) {
warning(paste("Multiple unique references matched by search term:", search.term))
}
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
}
}
}
warnings()
foreach(i = table.file) %do% {  # Setting up foreach loop instead of for, to be able to do parallell processing later on.
ma.table <- read.csv(paste(table.dir, table.file, sep = ""))  # Load the relevant meta analysis table
ma.table$x_doi <- NA  # Set up DOI column
nrefs <- length(alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]])  # count number of references
foreach(j = 1:nrefs) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {
warning(paste("Multiple unique references matched by search term:", search.term))
}
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
}
}
}
foreach(i = table.file) %do% {  # Setting up foreach loop instead of for, to be able to do parallell processing later on.
ma.table <- read.csv(paste(table.dir, table.file, sep = ""))  # Load the relevant meta analysis table
ma.table$x_doi <- NA  # Set up DOI column
nrefs <- length(alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]])  # count number of references
foreach(j = 1:nrefs) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {
warning(paste("Multiple unique references matched by search term:", search.term, "in reference", j))
}
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
}
}
}
ma.table
View(ma.table)
ref[["ref-info"]][["ref-title"]]
ref[["ref-info"]][["ref-title"]][["ref-titletext"]]
as.character(ref[["ref-info"]][["ref-title"]][["ref-titletext"]])
paste("title:", ref[["ref-info"]][["ref-title"]][["ref-titletext"]], sep = "")
View(alist)
View(alist)
View(alist)
table.file
i
table.file <- list.files(path = table.dir,
pattern = paste(pbul.gsheet$VL[ma.index], "_", pbul.gsheet$IS[ma.index], "_", pbul.gsheet$BP[ma.index], ".*csv", sep = ""),
recursive = TRUE)
table.dir
table.file
write.csv(x = ma.table, file = i)
getwd()
paste(table.dir, i, sep = "")
write.csv(x = ma.table, file = paste(table.dir, i, sep = ""))
doi
foreach(j = 175) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
titl <- ref[["ref-info"]][["ref-title"]][["ref-titletext"]]  # Grab publication title (needed for later DOI search)
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {  # Throw warning and abort DOI insertion if multiple unique table references match the search term
warning(paste("Multiple unique references matched by search term:", search.term, "in reference", j))
} else {
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
} else { # Search crossref for DOI if none is available in the rscopus data
search.works <- cr_works(query = paste("author:", author.1,
" year:", year,
" title:", titl, sep = ""))  # Search crossref works for DOIs
# Find the DOI matching the refereence listed in the rscopus table
search.dois <- unlist(cr_cn(search.works[["data"]][["DOI"]]))  # Search crossref for publications matching DOIs found in search
doi.match <- grep(paste(".*", author.1, ".*", year, ".*", titl, ".*", sep = ""), search.dois, ignore.case = TRUE)  # Find publication matching the first-author, year, and title of the reference from rscopus
if (length(doi.match) == 0) {
print(paste("No DOI could be found in crossref for search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) > 2) {
print(paste("Info for more than one DOI in crossref matches search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) == 1) {
ma.table[index, "x_doi"] <- search.works[["data"]][["DOI"]][[doi.match]]
}
}
}
}
write.csv(x = ma.table, file = paste(table.dir, i, sep = ""))
}
foreach(i = table.file) %do% {  # Setting up foreach loop instead of for, to be able to do parallell processing later on.
ma.table <- read.csv(paste(table.dir, table.file, sep = ""))  # Load the relevant meta analysis table
ma.table$x_doi <- NA  # Set up DOI column
nrefs <- length(alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]])  # count number of references
foreach(j = 175) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
titl <- ref[["ref-info"]][["ref-title"]][["ref-titletext"]]  # Grab publication title (needed for later DOI search)
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {  # Throw warning and abort DOI insertion if multiple unique table references match the search term
warning(paste("Multiple unique references matched by search term:", search.term, "in reference", j))
} else {
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
} else { # Search crossref for DOI if none is available in the rscopus data
search.works <- cr_works(query = paste("author:", author.1,
" year:", year,
" title:", titl, sep = ""))  # Search crossref works for DOIs
# Find the DOI matching the refereence listed in the rscopus table
search.dois <- unlist(cr_cn(search.works[["data"]][["DOI"]]))  # Search crossref for publications matching DOIs found in search
doi.match <- grep(paste(".*", author.1, ".*", year, ".*", titl, ".*", sep = ""), search.dois, ignore.case = TRUE)  # Find publication matching the first-author, year, and title of the reference from rscopus
if (length(doi.match) == 0) {
print(paste("No DOI could be found in crossref for search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) > 2) {
print(paste("Info for more than one DOI in crossref matches search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) == 1) {
ma.table[index, "x_doi"] <- search.works[["data"]][["DOI"]][[doi.match]]
}
}
}
}
write.csv(x = ma.table, file = paste(table.dir, i, sep = ""))
}
library(googlesheets)
library(rcrossref)
library(rAltmetric)
library(rscopus)
library(foreach)
foreach(i = table.file) %do% {  # Setting up foreach loop instead of for, to be able to do parallell processing later on.
ma.table <- read.csv(paste(table.dir, table.file, sep = ""))  # Load the relevant meta analysis table
ma.table$x_doi <- NA  # Set up DOI column
nrefs <- length(alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]])  # count number of references
foreach(j = 175) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
titl <- ref[["ref-info"]][["ref-title"]][["ref-titletext"]]  # Grab publication title (needed for later DOI search)
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {  # Throw warning and abort DOI insertion if multiple unique table references match the search term
warning(paste("Multiple unique references matched by search term:", search.term, "in reference", j))
} else {
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
} else { # Search crossref for DOI if none is available in the rscopus data
search.works <- cr_works(query = paste("author:", author.1,
" year:", year,
" title:", titl, sep = ""))  # Search crossref works for DOIs
# Find the DOI matching the refereence listed in the rscopus table
search.dois <- unlist(cr_cn(search.works[["data"]][["DOI"]]))  # Search crossref for publications matching DOIs found in search
doi.match <- grep(paste(".*", author.1, ".*", year, ".*", titl, ".*", sep = ""), search.dois, ignore.case = TRUE)  # Find publication matching the first-author, year, and title of the reference from rscopus
if (length(doi.match) == 0) {
print(paste("No DOI could be found in crossref for search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) > 2) {
print(paste("Info for more than one DOI in crossref matches search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) == 1) {
ma.table[index, "x_doi"] <- search.works[["data"]][["DOI"]][[doi.match]]
}
}
}
}
write.csv(x = ma.table, file = paste(table.dir, i, sep = ""))
}
foreach(i = table.file) %do% {  # Setting up foreach loop instead of for, to be able to do parallell processing later on.
ma.table <- read.csv(paste(table.dir, table.file, sep = ""))  # Load the relevant meta analysis table
ma.table$x_doi <- NA  # Set up DOI column
nrefs <- length(alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]])  # count number of references
foreach(j = 174) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
titl <- ref[["ref-info"]][["ref-title"]][["ref-titletext"]]  # Grab publication title (needed for later DOI search)
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {  # Throw warning and abort DOI insertion if multiple unique table references match the search term
warning(paste("Multiple unique references matched by search term:", search.term, "in reference", j))
} else {
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
} else { # Search crossref for DOI if none is available in the rscopus data
search.works <- cr_works(query = paste("author:", author.1,
" year:", year,
" title:", titl, sep = ""))  # Search crossref works for DOIs
# Find the DOI matching the refereence listed in the rscopus table
search.dois <- unlist(cr_cn(search.works[["data"]][["DOI"]]))  # Search crossref for publications matching DOIs found in search
doi.match <- grep(paste(".*", author.1, ".*", year, ".*", titl, ".*", sep = ""), search.dois, ignore.case = TRUE)  # Find publication matching the first-author, year, and title of the reference from rscopus
if (length(doi.match) == 0) {
print(paste("No DOI could be found in crossref for search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) > 2) {
print(paste("Info for more than one DOI in crossref matches search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) == 1) {
ma.table[index, "x_doi"] <- search.works[["data"]][["DOI"]][[doi.match]]
}
}
}
}
write.csv(x = ma.table, file = paste(table.dir, i, sep = ""))
}
foreach(j = 177) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
titl <- ref[["ref-info"]][["ref-title"]][["ref-titletext"]]  # Grab publication title (needed for later DOI search)
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {  # Throw warning and abort DOI insertion if multiple unique table references match the search term
warning(paste("Multiple unique references matched by search term:", search.term, "in reference", j))
} else {
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
} else { # Search crossref for DOI if none is available in the rscopus data
search.works <- cr_works(query = paste("author:", author.1,
" year:", year,
" title:", titl, sep = ""))  # Search crossref works for DOIs
# Find the DOI matching the refereence listed in the rscopus table
search.dois <- unlist(cr_cn(search.works[["data"]][["DOI"]]))  # Search crossref for publications matching DOIs found in search
doi.match <- grep(paste(".*", author.1, ".*", year, ".*", titl, ".*", sep = ""), search.dois, ignore.case = TRUE)  # Find publication matching the first-author, year, and title of the reference from rscopus
if (length(doi.match) == 0) {
print(paste("No DOI could be found in crossref for search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) > 2) {
print(paste("Info for more than one DOI in crossref matches search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) == 1) {
ma.table[index, "x_doi"] <- search.works[["data"]][["DOI"]][[doi.match]]
}
}
}
}
write.csv(x = ma.table, file = paste(table.dir, i, sep = ""))
}
foreach(i = table.file) %do% {  # Setting up foreach loop instead of for, to be able to do parallell processing later on.
ma.table <- read.csv(paste(table.dir, table.file, sep = ""))  # Load the relevant meta analysis table
ma.table$x_doi <- NA  # Set up DOI column
nrefs <- length(alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]])  # count number of references
foreach(j = 177) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
titl <- ref[["ref-info"]][["ref-title"]][["ref-titletext"]]  # Grab publication title (needed for later DOI search)
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {  # Throw warning and abort DOI insertion if multiple unique table references match the search term
warning(paste("Multiple unique references matched by search term:", search.term, "in reference", j))
} else {
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
} else { # Search crossref for DOI if none is available in the rscopus data
search.works <- cr_works(query = paste("author:", author.1,
" year:", year,
" title:", titl, sep = ""))  # Search crossref works for DOIs
# Find the DOI matching the refereence listed in the rscopus table
search.dois <- unlist(cr_cn(search.works[["data"]][["DOI"]]))  # Search crossref for publications matching DOIs found in search
doi.match <- grep(paste(".*", author.1, ".*", year, ".*", titl, ".*", sep = ""), search.dois, ignore.case = TRUE)  # Find publication matching the first-author, year, and title of the reference from rscopus
if (length(doi.match) == 0) {
print(paste("No DOI could be found in crossref for search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) > 2) {
print(paste("Info for more than one DOI in crossref matches search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) == 1) {
ma.table[index, "x_doi"] <- search.works[["data"]][["DOI"]][[doi.match]]
}
}
}
}
write.csv(x = ma.table, file = paste(table.dir, i, sep = ""))
}
table.dir <- "C:/Users/20176239/Dropbox/jobb/PhD/Projects/Meta-Data/EXCEL_FILES/"  # Set the directory where meta analysis table files can be found
table.file <- list.files(path = table.dir,
pattern = paste(pbul.gsheet$VL[ma.index], "_", pbul.gsheet$IS[ma.index], "_", pbul.gsheet$BP[ma.index], ".*csv", sep = ""),
recursive = TRUE)  # Locate relevant table files, based on the row-index of the doi in the meta-analysis gsheet.
foreach(i = table.file) %do% {  # Setting up foreach loop instead of for, to be able to do parallell processing later on.
ma.table <- read.csv(paste(table.dir, table.file, sep = ""))  # Load the relevant meta analysis table
ma.table$x_doi <- NA  # Set up DOI column
nrefs <- length(alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]])  # count number of references
foreach(j = 177) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
titl <- ref[["ref-info"]][["ref-title"]][["ref-titletext"]]  # Grab publication title (needed for later DOI search)
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {  # Throw warning and abort DOI insertion if multiple unique table references match the search term
warning(paste("Multiple unique references matched by search term:", search.term, "in reference", j))
} else {
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
} else { # Search crossref for DOI if none is available in the rscopus data
search.works <- cr_works(query = paste("author:", author.1,
" year:", year,
" title:", titl, sep = ""))  # Search crossref works for DOIs
# Find the DOI matching the refereence listed in the rscopus table
search.dois <- unlist(cr_cn(search.works[["data"]][["DOI"]]))  # Search crossref for publications matching DOIs found in search
doi.match <- grep(paste(".*", author.1, ".*", year, ".*", titl, ".*", sep = ""), search.dois, ignore.case = TRUE)  # Find publication matching the first-author, year, and title of the reference from rscopus
if (length(doi.match) == 0) {
print(paste("No DOI could be found in crossref for search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) > 2) {
print(paste("Info for more than one DOI in crossref matches search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) == 1) {
ma.table[index, "x_doi"] <- search.works[["data"]][["DOI"]][[doi.match]]
}
}
}
}
write.csv(x = ma.table, file = paste(table.dir, i, sep = ""))
}
View(ma.table)
foreach(i = table.file) %do% {  # Setting up foreach loop instead of for, to be able to do parallell processing later on.
ma.table <- read.csv(paste(table.dir, table.file, sep = ""))  # Load the relevant meta analysis table
ma.table$x_doi <- NA  # Set up DOI column
nrefs <- length(alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]])  # count number of references
foreach(j = 1:nrefs) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
titl <- ref[["ref-info"]][["ref-title"]][["ref-titletext"]]  # Grab publication title (needed for later DOI search)
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {  # Throw warning and abort DOI insertion if multiple unique table references match the search term
warning(paste("Multiple unique references matched by search term:", search.term, "in reference", j))
} else {
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
# } else { # Search crossref for DOI if none is available in the rscopus data
#   search.works <- cr_works(query = paste("author:", author.1,
#                                          " year:", year,
#                                          " title:", titl, sep = ""))  # Search crossref works for DOIs
#
#   # Find the DOI matching the refereence listed in the rscopus table
#   search.dois <- unlist(cr_cn(search.works[["data"]][["DOI"]]))  # Search crossref for publications matching DOIs found in search
#   doi.match <- grep(paste(".*", author.1, ".*", year, ".*", titl, ".*", sep = ""), search.dois, ignore.case = TRUE)  # Find publication matching the first-author, year, and title of the reference from rscopus
#   if (length(doi.match) == 0) {
#     print(paste("No DOI could be found in crossref for search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
#   } else if (length(doi.match) > 2) {
#     print(paste("Info for more than one DOI in crossref matches search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
#   } else if (length(doi.match) == 1) {
#     ma.table[index, "x_doi"] <- search.works[["data"]][["DOI"]][[doi.match]]
#   }
}
}
}
write.csv(x = ma.table, file = paste(table.dir, i, sep = ""))
}
View(ma.table)
length(is.na(ma.table$x_doi))
is.na(ma.table$x_doi)
sum(is.na(ma.table$x_doi))
sum(!is.na(ma.table$x_doi))
View(ma.table)
table.dir <- "C:/Users/20176239/Dropbox/jobb/PhD/Projects/Meta-Data/EXCEL_FILES/"  # Set the directory where meta analysis table files can be found
table.file <- list.files(path = table.dir,
pattern = paste(pbul.gsheet$VL[ma.index], "_", pbul.gsheet$IS[ma.index], "_", pbul.gsheet$BP[ma.index], ".*csv", sep = ""),
recursive = TRUE)  # Locate relevant table files, based on the row-index of the doi in the meta-analysis gsheet.
foreach(i = table.file) %do% {  # Setting up foreach loop instead of for, to be able to do parallell processing later on.
ma.table <- read.csv(paste(table.dir, table.file, sep = ""))  # Load the relevant meta analysis table
ma.table$x_doi <- NA  # Set up DOI column
nrefs <- length(alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]])  # count number of references
foreach(j = 1:nrefs) %do% {  # Loop through reference list, matching relevant references to x_study column in the meta analysis table and inserting the doi
ref <- alist[["content"]][["abstracts-retrieval-response"]][["item"]][["bibrecord"]][["tail"]][["bibliography"]][["reference"]][[j]]  # grab reference info from rscopus list
author.1 <- ref[["ref-info"]][["ref-authors"]][["author"]][[1]][["ce:surname"]]  # grab first author info
year <- ref[["ref-info"]][["ref-publicationyear"]][["@first"]]  # grab publication year info
titl <- ref[["ref-info"]][["ref-title"]][["ref-titletext"]]  # Grab publication title (needed for later DOI search)
search.term <- paste("^", author.1, ".*", year, ".*", sep = "")  # make regular expression search term based on first author and year info
index <- grep(search.term, ma.table$x_study)  # search meta analysis table for row indexes matching the search term
if (length(unique(ma.table[index,"x_study"])) > 1) {  # Throw warning and abort DOI insertion if multiple unique table references match the search term
warning(paste("Multiple unique references matched by search term:", search.term, "in reference", j))
} else {
if (!is.null(ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]])) {  # Check whether DOI for reference exist
ma.table[index, "x_doi"] <- ref[["ref-info"]][["ref-website"]][["ce:e-address"]][[1]][[1]]  # add DOI to meta analysis indexes identified above
} else { # Search crossref for DOI if none is available in the rscopus data
search.works <- cr_works(query = paste("author:", author.1,
" year:", year,
" title:", titl, sep = ""))  # Search crossref works for DOIs
# Find the DOI matching the refereence listed in the rscopus table
search.dois <- unlist(cr_cn(search.works[["data"]][["DOI"]]))  # Search crossref for publications matching DOIs found in search
doi.match <- grep(paste(".*", author.1, ".*", year, ".*", titl, ".*", sep = ""), search.dois, ignore.case = TRUE)  # Find publication matching the first-author, year, and title of the reference from rscopus
if (length(doi.match) == 0) {
print(paste("No DOI could be found in crossref for search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) > 2) {
print(paste("Info for more than one DOI in crossref matches search: ", ".*", author.1, ".*", year, ".*", titl, ".*", sep = ""))
} else if (length(doi.match) == 1) {
ma.table[index, "x_doi"] <- search.works[["data"]][["DOI"]][[doi.match]]
}
}
}
}
write.csv(x = ma.table, file = paste(table.dir, i, sep = ""))
}
View(ma.table)
sum(!is.na(ma.table$x_doi))
ma.table$x_study[1]
ma.table$x_study[73]
ma.table$x_study[37]
x <- ma.table$x_study[37]
x <- as.character(x)
x
strsplit(x)
strsplit(x, split = ",")
strsplit(x, split = "[, &]")
