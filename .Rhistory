x <- lapply(x[2], cr_abstract)
cr_abstract(x[3])
cr_abstract(x[4])
cr_abstract(x[5])
cr_abstract(x[6])
cr_abstract(x[7])
cr_abstract(paste0("dx.doi.org/", x[7]))
cr_abstract(paste0("doi.org/", x[7]))
library(rscopus)
set_api_key('9ac91fdbf147316eeb53a16681ddc95f')
abstract_retrieval(x[1])
abstract_retrieval(x[1], identifier = "doi")
abstract <- abstract_retrieval(x[1], identifier = "doi")
View(abstract)
abstract[["content"]][["abstracts-retrieval-response"]][["coredata"]][["dc:description"]]
abstract_retrieval(x[1], identifier = "doi")[["content"]][["abstracts-retrieval-response"]][["coredata"]][["dc:description"]]
abstract_retrieval(x[2], identifier = "doi")[["content"]][["abstracts-retrieval-response"]][["coredata"]][["dc:description"]]
cr_cn(dois = x)
high.rv <- cursci[order(cursci$rvCAP_pyear, decreasing = TRUE), ] %>% .$orig.study.article.DOI %>% unique() %>% .[1:10]
View(cursci)
low.rv <- cursci[order(cursci$rvCAP_pyear, decreasing = FALSE), ] %>% .$orig.study.article.DOI %>% unique() %>% .[1:10]
low.rv
cr_cn(low.rv)
cursci$orig.N[cursci$orig.study.article.DOI %in% high.rv]
cursci$orig.study.article.DOI %in% high.rv
cursci$orig.N[cursci$orig.study.article.DOI %in% low.rv]
cor(complete.cases(cursci[,c(53,56)]))
complete.cases(cursci[,c(53,56)])
complete.cases(cursci[,c(53,56, 58, 59)])
str(cursci[,c(53,56, 58, 59)])
cor(complete.cases(cursci[,c(53,56, 58, 59)]))
cor(as.matrix(complete.cases(cursci[,c(53,56, 58, 59)])))
complete.cases(cursci[,c(53,56, 58, 59)])
unique(cursci$orig.study.article.DOI)
nrow(unique(cursci$orig.study.article.DOI))
length(unique(cursci$orig.study.article.DOI))
length(unique(cursci$rep.study.article.URL))
## Get unique replication URLs
unique(cursci$rep.study.article.URL)
## Get unique replication URLs
rep.urls <- unique(cursci$rep.study.article.URL)
rep.urls[1]
rep.urls[2]
rep.urls[99]
cursci[cursci$rep.effort.type == "RPP"]
str(cursci)
cursci[cursci$rep.effort.type %in% "RPP"]
cursci[cursci$rep.effort.type %in% "RPP",]
cursci[grep( "RPP", cursci$rep.effort.type),]
library(dplyr)
cursci[grep( "RPP", cursci$rep.effort.type),] %>% summary(.$rep.outcome)
cursci[grep( "RPP", cursci$rep.effort.type),] %>% summarise(.$rep.outcome)
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rep.outcome
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rep.outcome[.$rvCAN > 10]
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rep.outcome[.$rvCAN > 10,]
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rep.outcome[.$rvCAN_pyear > 10]
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rep.outcome[as,numeric(.$rvCAN_pyear) > 10]
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rep.outcome[as.numeric(.$rvCAN_pyear) > 10]
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rep.outcome[.$rvCAN_pyear > 1]
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rvCAN_pyear
chisq.test(cursci$rep.outcome, cursci$rvCAN_pyear)
plot(cursci$rep.outcome, cursci$rvCAN_pyear)
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rep.outcome[.$rvCAN_pyear > 0.1]
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rep.outcome[.$rvCAN_pyear > 0.1]
cursci[grep( "RPP", cursci$rep.effort.type),] %>% c(.$rep.outcome)
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rep.outcome
cursci[grep( "RPP", cursci$rep.effort.type),] %>% .$rvCAN_pyear
x <- cursci[grep( "RPP", cursci$rep.effort.type),]
x <- x[, c("rvCAN_pyear", "rep.outcome")]
View(x)
plot(x)
sum(grep("- consistent", x$rep.outcome))
length(grep("- consistent", x$rep.outcome))
length(grep("- consistent", x$rep.outcome[x$rvCAN_pyear > .25]))
length(grep("- consistent", x$rep.outcome[x$rvCAN_pyear < .25]))
length(grep("- consistent", x$rep.outcome[x$rvCAN_pyear < .0]))
length(grep("- consistent", x$rep.outcome[x$rvCAN_pyear > .0]))
length(grep("- inconsistent", x$rep.outcome[x$rvCAN_pyear < .25]))
length(grep("- consistent", x$rep.outcome[x$rvCAN_pyear < .25]))
length(grep("- inconsistent", x$rep.outcome[x$rvCAN_pyear > .25]))
sum(x$rvCAN_pyear > .25)
x$rvCAN_pyear > .25
sum(!is.na(x$rvCAN_pyear > .25))
sum(!isTRUE(x$rvCAN_pyear > .25))
sum(isTRUE(x$rvCAN_pyear > .25))
isTRUE(x$rvCAN_pyear > .25)
length(grep("- inconsistent", x$rep.outcome[x$rvCAN_pyear < .1]))
length(grep("- inconsistent", x$rep.outcome[x$rvCAN_pyear > .1]))
length(grep("- consistent", x$rep.outcome[x$rvCAN_pyear < .1]))
length(grep("- consistent", x$rep.outcome[x$rvCAN_pyear > .1]))
sum(is.na(x$rvCAN_pyear))
rep.urls[100]
rep.urls[101]
rep.urls[102]
rep.urls[103]
rep.urls[104]
rep.urls[105]
rep.urls[106]
rep.urls[107]
rep.urls[108]
rep.urls[109]
rep.urls[110]
rep.urls[111]
rep.urls[112]
rep.urls[113]
View(cursci)
cursci[cursci$rep.study.article.URL == "https://github.com/eplebel/science-commons/blob/master/curated/schnalletal2008a/johnson%20et%20al%20(2014b).pdf"]
cursci[cursci$rep.study.article.URL == "https://github.com/eplebel/science-commons/blob/master/curated/schnalletal2008a/johnson%20et%20al%20(2014b).pdf"]
cursci[cursci$rep.study.article.URL == "https://github.com/eplebel/science-commons/blob/master/curated/schnalletal2008a/johnson%20et%20al%20(2014b).pdf",]
rep.urls[114]
rep.urls[115]
rep.urls[116]
rep.urls[117]
rep.urls[118]
rep.urls[119]
rep.urls[120]
rep.urls[121]
rep.urls[122]
rep.urls[123]
rep.urls[124]
grep(rep.urls[1])
grep(rep.urls[1], cursci)
grep(rep.urls[1], cursci$rep.study.article.URL)
grep(rep.urls[2], cursci$rep.study.article.URL)
grep(rep.urls[10], cursci$rep.study.article.URL)
grep(rep.urls[178], cursci$rep.study.article.URL)
grep(rep.urls[170], cursci$rep.study.article.URL)
sapply(rep.urls, function (x) grep(x, cursci$rep.study.article.URL)
)
rep.urls[125]
rep.urls[126]
rep.urls[127]
rep.urls[128]
rep.urls[129]
rep.urls[130]
rep.urls[131]
rep.urls[131]
rep.urls[132]
rep.urls[133]
rep.urls[134]
rep.urls[135]
rep.urls[136]
rep.urls[136]
rep.urls[137]
rep.urls[138]
rep.urls[139]
rep.urls[140]
rep.urls[14]
rep.urls[141]
rep.urls[142]
rep.urls[143]
rep.urls[144]
rep.urls[145]
rep.urls[146]
rep.urls[147]
rep.urls[148]
rep.urls[149]
rep.urls[150]
rep.urls[151]
rep.urls[152]
rep.urls[153]
rep.urls[154]
rep.urls[155]
rep.urls[156]
rep.urls[157]
rep.urls[158]
rep.urls[159]
rep.urls[116]
rep.urls[160]
rep.urls[161]
rep.urls[162]
rep.urls[163]
rep.urls[164]
rep.urls[165]
rep.urls[166]
grep(rep.urls[166], cursci$rep.study.article.URL)
grep(rep.urls[160], cursci$rep.study.article.URL)
grep(rep.urls[161], cursci$rep.study.article.URL)
grep(rep.urls[162], cursci$rep.study.article.URL)
cursci$rep.study.article.URL[1013]
rep.urls[161]
unique(cursci$rep.study.article.URL)
grep(rep.urls[162], cursci$rep.study.article.URL)
grep(rep.urls[161], cursci$rep.study.article.URL)
rep.urls[161] == cursci$rep.study.article.URL[1012]
rep.urls[161] %in% cursci$rep.study.article.URL[1012]
cursci$rep.study.article.URL[1012] %in% rep.urls[161]
cursci$rep.study.article.URL %in% rep.urls[161]
cursci$rep.study.article.URL[cursci$rep.study.article.URL %in% rep.urls[161]]
which(cursci$rep.study.article.URL %in% rep.urls[161] )
which(cursci$rep.study.article.URL %in% rep.urls[162])
which(cursci$rep.study.article.URL %in% rep.urls[163])
which(cursci$rep.study.article.URL %in% rep.urls[160])
x <- lapply(1:178, function(x) which(cursci$rep.study.article.URL %in% rep.urls[x]))
View(x)
nrow(curscu)
nrow(cursci)
rep.urls[167]
rep.urls[168]
rep.urls[169]
rep.urls[170]
rep.urls[171]
rep.urls[111]
rep.urls[112]
rep.urls[172]
rep.urls[173]
nrow(rep.urls)
length(rep.urls)
rep.urls[174]
rep.urls[174]
rep.urls[175]
which(cursci$rep.study.article.URL %in% rep.urls[1])
which(cursci$rep.study.article.URL %in% rep.urls[2])
which(cursci$rep.study.article.URL %in% rep.urls[160])
rep.urls[176]
rep.urls[177]
mean)cursci$x_crcited_pyear=
mean)(cursci$x_crcited_pyear)
mean(cursci$x_crcited_pyear)
mean(cursci$x_crcited_pyear, na.rm = TRUE)
cursci[c("orig.article.URL, "x_crcited_pyear")]
cursci[c("orig.article.URL", "x_crcited_pyear")]
cursci[c("orig.study.article.URL", "x_crcited_pyear")]
uniquecursci[c("orig.study.article.URL", "x_crcited_pyear")])
unique(cursci[c("orig.study.article.URL", "x_crcited_pyear")])
x <- unique(cursci[c("orig.study.article.URL", "x_crcited_pyear")])
mean(x$x_crcited_pyear)
mean(x$x_crcited_pyear, na.rm = TRUE)
21/4
rep.urls[178]
500/8
62.5/50
x <- unique(cursci[c("orig.study.article.URL", "rvCAN_pyear")])
x
mean(x$x_crcited_pyear, na.rm = TRUE)
mean(x$rvCAN_pyear, na.rm = TRUE)
(350/16) / 55
hist(x$rvCAN_pyear)
hist(x$rvCAN_pyear, breaks = 20)
hist(x$rvCAN_pyear, breaks = 50)
median(x$rvCAN_pyear, na.rm = TRUE)
rep.urls[179]
29^7
39^7
39^6
library(TOSTER)
names(master.df)
master.df[1:10, "x_crcited"]
master.df[1:10, c("x_crcited")]
master.df[1:10, c("x_study", "x_crcited")]
unique(master.df[1:10, c("x_study", "x_crcited")])
unique(master.df[!is.na(master.df$x_crcited), c("x_study", "x_crcited")])
unique(master.df[!is.na(master.df$x_crcited), c("x_study", "x_crcited")])
x <- unique(master.df[!is.na(master.df$x_crcited), c("x_study", "x_crcited")])
hist(x)
hist(x$x_crcited)
library(ggplot2)
install.packages(""ggplot2"")
install.packages("ggplot2")
library(ggplot2)
ggplot(data = x) + geom_histogram(aes(x = x_crcited))
ggplot(data = x) + geom_histogram(aes(x = x_crcited), xlim = 500)
ggplot(data = x) + geom_histogram(aes(x = x_crcited, xlim = 500), )
ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50)
ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50) + xlim(c(0,500))
ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50) + xlim(c(0,400))
ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50) + xlim(c(0,500))
ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50) + xlim(c(0,400))
ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, col = x_crcited) + xlim(c(0,400))
ggplot(data = x) + geom_histogram(aes(x = x_crcited, col = x_crcited), bins = 50) + xlim(c(0,400))
ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, col = "blue") + xlim(c(0,400))
ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "blue") + xlim(c(0,400))
ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400))
library(ggplot2)
ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400))
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_bw()
plot(p)
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_bw(base_size = 10)
plot(p)
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_bw(base_size = 40)
plot(p)
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_bw(base_size = 20)
plot(p)
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_bw(base_size = 20, base_family = "MSGill")
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_bw(base_size = 20, base_family = "MT_Gill")
plot(p)
install.packages("xkcd")
library(xkcd)
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_xkcd
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_xkcd()
vignette("xkcd-intro")
ibrary(extrafont)
library(extrafont)
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_xkcd()
download.file("http://simonsoftware.se/other/xkcd.ttf",
+ dest="xkcd.ttf", mode="wb")
> system("mkdir ~/.fonts")
> system("cp xkcd.ttf ~/.fonts")
> font_import(pattern = "[X/x]kcd", prompt=FALSE)
> fonts()
> fonttable()
> if(.Platform$OS.type != "unix") {
+ ## Register fonts for Windows bitmap output
+ loadfonts(device="win")
+ } else {
+ loadfonts()
+ }
download.file("http://simonsoftware.se/other/xkcd.ttf",
+ dest="xkcd.ttf", mode="wb")
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_bw(base_size = 20, base_family = "MT_Gill")
fonts()
extrafont::choose_font()
extrafont::fonts()
extrafont::font_install()
p <- ggplot(data = x) + geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) + theme_bw(base_size = 20, base_family = "MT Gill")
plot(p)
windowsFonts()
font_import()
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#3f51b5") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "MT Gill")
plot(p)
install.packages("showtext")
library(showtext)
font_add_google("Roboto")
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto")
plot(p)
showtext_auto()
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto")
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto") +
theme(axis.title.x = "Citation count")
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto") +
theme(axis.title.x = "Citation count")
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto") +
theme(axis.title.x = element_text("Citation count"))
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto") +
labs(x = "Citation count")
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto") +
xlab("Citation count")
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto") +
xlab("Citation count") +
ylab("Frequency")
plot(p)
warnings()
warnings()
font_add_google("Roboto")
showtext_auto()
library(showtext)
font_add_google("Roboto")
showtext_auto()
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto") +
xlab("Citation count") +
ylab("Frequency")
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto") +
xlab("Citation count") +
ylab("Frequency")
plot(p)
font_add_google("roboto")
warnings()
font_add_google("oboto")
font_add_google("Roboto")
showtext_auto()
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Roboto") +
xlab("Citation count", family = "Roboto") +
ylab("Frequency")
plot(p)
font_files()
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "MT Gill") +
xlab("Citation count") +
ylab("Frequency")
plot(p)
library(showtext)
library(extrafont)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "MT Gill") +
xlab("Citation count") +
ylab("Frequency")
plot(p)
fonts()
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Georgia") +
xlab("Citation count") +
ylab("Frequency")
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Gill Sans MT") +
xlab("Citation count") +
ylab("Frequency")
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Gill Sans MT") +
xlab("Citation count") +
ylab("Frequency") +
title("G")
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Gill Sans MT") +
xlab("Citation count") +
ylab("Frequency") +
labs(title = "vr")
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Gill Sans MT") +
xlab("Citation count") +
ylab("Frequency") +
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Gill Sans MT") +
xlab("Citation count") +
ylab("Frequency") +
plot(p)
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Gill Sans MT") +
xlab("Citation count") +
ylab("Frequency")
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Gill Sans MT") +
xlab("Citation count") +
ylab("Frequency")
plot(p)
tiff("citation_counts.tiff", res = 100)
plot(p)
tiff("citation_counts.tiff", res = 100)
dev.off()
plot(p)
tiff("citation_counts.tiff")
dev.off()
tiff("citation_counts.tiff", res = 600)
plot(p)
dev.off()
tiff("citation_counts.tiff", res = 300)
tiff("citation_counts.tiff", res = 300, width = 1000, height = 1200)
plot(p)
dev.off()
tiff("citation_counts.tiff", res = 300, width = 1500, height = 1200)
plot(p)
dev.off()
tiff("citation_counts.tiff", res = 600, width = 1000, height = 700)
plot(p)
dev.off()
tiff("citation_counts.tiff", res = 600, width = 1200, height = 1000)
plot(p)
dev.off()
tiff("citation_counts.tiff", res = 300, width = 1200, height = 1000)
plot(p)
dev.off()
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 30, base_family = "Gill Sans MT") +
xlab("Citation count") +
ylab("Frequency")
plot(p)
tiff("citation_counts.tiff", res = 300, width = 1200, height = 1000)
plot(p)
dev.off()
p <- ggplot(data = x) +
geom_histogram(aes(x = x_crcited), bins = 50, fill = "#00bea6") + xlim(c(0,400)) +
theme_bw(base_size = 20, base_family = "Gill Sans MT") +
xlab("Citation count") +
ylab("Frequency")
plot(p)
tiff("citation_counts.tiff", res = 300, width = 1200, height = 1000)
plot(p)
dev.off()
tiff("citation_counts.tiff", res = 300, width = 1000, height = 800)
dev.off()
plot(p)
tiff("citation_counts.tiff", res = 300, width = 1000, height = 800)
plot(p)
dev.off()
View(tables)
save(file = "masterdf.Rdata", list = master.df)
save(master.df, file = "masterdf.Rdata")
View(master.df)
